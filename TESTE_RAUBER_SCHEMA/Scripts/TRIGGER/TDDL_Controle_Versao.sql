CREATE OR ALTER TRIGGER [TDDL_Controle_Versao]
ON DATABASE FOR DDL_DATABASE_LEVEL_EVENTS AS

BEGIN	
	DECLARE 
		@EVENTO XML = ''
	,	@NOME_DATABASE VARCHAR(100) = ''
	,	@TIPO_EVENTO VARCHAR(50) = ''
	,	@NOME_SERVIDOR VARCHAR(50) = ''	
	,	@NOME_OBJETO NVARCHAR(100) = ''
	,	@USUARIO_ATUALIZACAO VARCHAR(50) = ''

	SET @EVENTO = EVENTDATA()
	SET @NOME_DATABASE = @EVENTO.value('(/EVENT_INSTANCE/DatabaseName/text())[1]','varchar(100)')
	SET @TIPO_EVENTO = @EVENTO.value('(/EVENT_INSTANCE/EventType/text())[1]','varchar(50)')
	SET @NOME_SERVIDOR = @Evento.value('(/EVENT_INSTANCE/ServerName/text())[1]','varchar(50)')
	SET @NOME_OBJETO = @EVENTO.value('(/EVENT_INSTANCE/ObjectName/text())[1]','varchar(100)')
	SET @USUARIO_ATUALIZACAO = @EVENTO.value('(/EVENT_INSTANCE/LoginName/text())[1]','varchar(50)')
	  

	IF(NOT EXISTS(
		SELECT 1
		FROM [TESTE_RAUBER_VERSIONAMENTO].[dbo].[BANCO_ORIGEM_PARA_BANCO_DESTINO]
		WHERE @NOME_DATABASE IN(NOME_BANCO_ORIGEM, NOME_BANCO_DESTINO)
		)
	OR(@TIPO_EVENTO NOT IN('ALTER_VIEW', 'ALTER_PROCEDURE', 'ALTER_FUNCTION', 'ALTER_TRIGGER', 
			'CREATE_VIEW', 'CREATE_PROCEDURE', 'CREATE_FUNCTION', 'CREATE_TRIGGER',
			'DROP_VIEW', 'DROP_PROCEDURE', 'DROP_FUNCTION', 'DROP_TRIGGER')
	))
	BEGIN 	
		INSERT INTO [TESTE_RAUBER_VERSIONAMENTO].[DBO].[HISTORICO_ALTERACAO](
				TIPOEVENTO
			,	DTALTERACAO
			,	SERVIDOR
			,	NOMELOGIN
			,	NOMEDATABASE
			,	OBJETO
			,	DESCEVENTO
			,	MAQUINA
		)
		SELECT
			@TIPO_EVENTO
		,	@EVENTO.value('(/EVENT_INSTANCE/PostTime/text())[1]','datetime') PostTime
		,	@NOME_SERVIDOR
		,	@USUARIO_ATUALIZACAO
		,	@NOME_DATABASE
		,	@NOME_OBJETO
		,	@EVENTO
		,	HOST_NAME()

		RETURN 
	END
	
	DECLARE 
		@COMANDO_SQL NVARCHAR(MAX) = @EVENTO.value('(/EVENT_INSTANCE/TSQLCommand/CommandText/text())[1]', 'nvarchar(max)')	
	,	@TIPO_OBJETO VARCHAR(50) = @EVENTO.value('(/EVENT_INSTANCE/ObjectType/text())[1]','varchar(50)')
	
	,	@URL_PULL_REQUEST NVARCHAR(100) = 'https://github.com/rafael94rauber/DbVersionamentoSqlServer/pulls/'
	
	,	@ID_PULL_REQUEST INT = 0
	,	@DATA_HORA_PROCESSAMENTO  DATETIME = GETDATE()
	,	@MAX_DATA_ATUALIZACAO DATETIME	
	,	@DIFF_DIA_ATUAL INT = 0 

	DECLARE 
		@CHECKSUM INT = CHECKSUM(@COMANDO_SQL)
	,	@PROCESSADO BIT = 0
	,	@MENSAGEM_URL_PULL_REQUEST NVARCHAR(100) = ''
	,	@MENSAGEM_PULL_REQUEST VARCHAR(500) = CONCAT( 
									SUSER_NAME()				
								,	': ESTAMOS CRIADO O SEU PULL REQUEST, SEGUE O LINK DO VERSIONAMENTO DA SUA PUBLICAÇÃO.'
								)

	SELECT 
		@MAX_DATA_ATUALIZACAO = MAX(DATA_ATUALIZACAO) 
	,	@ID_PULL_REQUEST = MAX(ID_PULL_REQUEST)
	FROM [TESTE_RAUBER_VERSIONAMENTO].[DBO].[CONTROLE_VERSAO]
	WHERE HASH_COMANDO = @CHECKSUM	
	AND NOME_DATABASE = @NOME_DATABASE
	
	SET @DIFF_DIA_ATUAL = DATEDIFF(MINUTE, @MAX_DATA_ATUALIZACAO, @DATA_HORA_PROCESSAMENTO)
	SET @ID_PULL_REQUEST = ISNULL(@ID_PULL_REQUEST,0)


	DECLARE @ULTIMO_HASH INT = ISNULL((
									SELECT TOP 1 HASH_COMANDO 
									FROM [TESTE_RAUBER_VERSIONAMENTO].[DBO].[CONTROLE_VERSAO]
									WHERE OBJETO = @NOME_OBJETO 
									AND NOME_DATABASE = @NOME_DATABASE
									ORDER BY ID_CONTROLE_VERSAO DESC
								), 0)

	IF( @ULTIMO_HASH = @CHECKSUM)
	BEGIN

		SET @MENSAGEM_PULL_REQUEST = CONCAT( 
				SUSER_NAME()				
			,	': PULL REQUEST JÁ FOI CRIADO PARA ESTE OBJETO, SEGUE O LINK DO PULL REQUEST.'
			)

		SET @MENSAGEM_URL_PULL_REQUEST = CONCAT(
				@URL_PULL_REQUEST
			,	IIF(@ID_PULL_REQUEST > 0
				,	CONVERT(VARCHAR(10), @ID_PULL_REQUEST)
				,	''
				)
			)		
	
		SELECT 
			MENSAGEM
		,	ULR_PULL_REQUEST		
		FROM( 
			SELECT						
				@MENSAGEM_PULL_REQUEST AS MENSAGEM
			,	@MENSAGEM_URL_PULL_REQUEST AS ULR_PULL_REQUEST		
		) AS PULL_REQUEST
		FOR XML PATH (''), ROOT('DADOS_LIBERACAO_VERSAO')

		RETURN
	END	

	SET @PROCESSADO = IIF((@TIPO_EVENTO IN('DROP_VIEW', 'DROP_PROCEDURE', 'DROP_FUNCTION', 'DROP_TRIGGER')), 1,	0)

	INSERT INTO [TESTE_RAUBER_VERSIONAMENTO].[DBO].[CONTROLE_VERSAO](
			TIPO_EVENTO
		,	TIPO_OBJETO
		,	SERVIDOR
		,	USUARIO_ATUALIZACAO
		,	NOME_DATABASE
		,	OBJETO
		,	XML_EVENTO
		,	MAQUINA
		,	COMANDO_SQL
		,	HASH_COMANDO
		,	PROCESSADO
		,	DATA_ATUALIZACAO
		,	ETAPA_PROCESSAMENTO
	)
	VALUES
	(
			@TIPO_EVENTO
		,	@TIPO_OBJETO
		,	@NOME_SERVIDOR
		,	@USUARIO_ATUALIZACAO
		,	@NOME_DATABASE
		,	@NOME_OBJETO
		,	@EVENTO
		,	HOST_NAME()
		,	@COMANDO_SQL
		,	@CHECKSUM
		,	@PROCESSADO
		,	@DATA_HORA_PROCESSAMENTO
		,	IIF(@PROCESSADO = 0
				,	1 
				,	3 
			)
	)	

	IF(@ID_PULL_REQUEST = 0)
	BEGIN
		SELECT @ID_PULL_REQUEST = MAX(ID_PULL_REQUEST)
		FROM [TESTE_RAUBER_VERSIONAMENTO].[DBO].[CONTROLE_VERSAO]
		WHERE ID_PULL_REQUEST IS NOT NULL				

		DECLARE @CONTADOR_PROCESSANDO INT = 0
		SELECT @CONTADOR_PROCESSANDO = COUNT(1)
		FROM [TESTE_RAUBER_VERSIONAMENTO].[DBO].[CONTROLE_VERSAO]
		WHERE ID_PULL_REQUEST IS NULL
		AND PROCESSADO = 0

		SET @CONTADOR_PROCESSANDO = IIF(@CONTADOR_PROCESSANDO <= 1, 0, @CONTADOR_PROCESSANDO)

		SET @ID_PULL_REQUEST = ISNULL(@ID_PULL_REQUEST,0) + ISNULL(@CONTADOR_PROCESSANDO,0)
		
	END	
	
	IF(EXISTS(
		SELECT 1
		FROM [TESTE_RAUBER_VERSIONAMENTO].[dbo].[BANCO_ORIGEM_PARA_BANCO_DESTINO]
		WHERE NOME_BANCO_DESTINO = @NOME_DATABASE 
	))
		BEGIN
			DECLARE @MENSAGEM_MASTER VARCHAR(700) = '<br /><br />'			
			
			IF(EXISTS(
				SELECT 1
				FROM [TESTE_RAUBER_VERSIONAMENTO].[dbo].[BANCO_ORIGEM_PARA_BANCO_DESTINO]			
				WHERE USUARIO_ROBO_VERSIONAMENTO = @USUARIO_ATUALIZACAO
			))
			BEGIN
				SELECT @ID_PULL_REQUEST = MAX(ID_PULL_REQUEST)
				FROM [TESTE_RAUBER_VERSIONAMENTO].[dbo].[CONTROLE_PULL_REQUEST]
				WHERE ESTADO_PULL_REQUEST != 'PROD'

				SET @MENSAGEM_URL_PULL_REQUEST = CONCAT(
							@URL_PULL_REQUEST			
						,	IIF(@ID_PULL_REQUEST > 0
							, CONVERT(VARCHAR(10), (@ID_PULL_REQUEST))
							, ''
						)
					)

				UPDATE [TESTE_RAUBER_VERSIONAMENTO].[dbo].[CONTROLE_VERSAO]
				SET PROCESSADO = 1
				WHERE USUARIO_ATUALIZACAO = @NOME_DATABASE
				AND NOME_DATABASE = @USUARIO_ATUALIZACAO
				AND HASH_COMANDO = @CHECKSUM
				AND OBJETO = @NOME_OBJETO
			END
			ELSE
			BEGIN 
				SET @MENSAGEM_PULL_REQUEST = 'OBJETO COMPILADO FORA DO FLUXO DE APROVAÇÃO E VERSIONAMENTO, SEGUE O REGISTRO DA ALTERAÇÃO REALIZADA.'				
				SET @MENSAGEM_URL_PULL_REQUEST = 'https://github.com/rafael94rauber/DbVersionamentoSqlServer/pulls/'	
				
				SET @MENSAGEM_MASTER += CONCAT(
										'<h1><b>Sistema de Versionamento de Objetos SQL</b></h1>'
									,	'<br /><br />'
									,	'<b>USUARIO ATUALIZAÇÃO: </b>'
									,	@USUARIO_ATUALIZACAO 
									,	'<br /><br />'
									,	'<b>TIPO DO OBJETO: </b>'
									,	@TIPO_OBJETO
									,	'<br /><br />'										
									,	'<b>NOME DO OBJETO: </b>'
									,	@NOME_OBJETO
									,	'<br /><br />'
									,	'<b>NOME DO BANCO DE DADOS: </b>'
									,	@NOME_DATABASE
									,	'<br /><br />'
									,	'<b>NOME DO SERVIDOR: </b>'
									,	@NOME_SERVIDOR
									,	'<br /><br />'								
									,	'<a href='
									,	@MENSAGEM_URL_PULL_REQUEST
									,	'><b>URL DO SISTEMA DE VERSIONAMENTO</b></a>'
									,	'<br /><br />'
									,	@MENSAGEM_URL_PULL_REQUEST
									,	'<br /><br />'
									,	'<br /><br />'
								)								
				SET @MENSAGEM_PULL_REQUEST += @MENSAGEM_MASTER
			END			
		END
	ELSE
	BEGIN 
		SET @MENSAGEM_URL_PULL_REQUEST = CONCAT(
								@URL_PULL_REQUEST			
							,	IIF(@ID_PULL_REQUEST > 0
								, CONVERT(VARCHAR(10), (@ID_PULL_REQUEST+1))
								, ''
								)
							)		
	END

	SELECT
		MENSAGEM
	,	ULR_PULL_REQUEST		
	FROM( 
		SELECT						
			@MENSAGEM_PULL_REQUEST AS MENSAGEM
		,	@MENSAGEM_URL_PULL_REQUEST AS ULR_PULL_REQUEST		
	) AS PULL_REQUEST
	FOR XML PATH (''), ROOT('DADOS_LIBERACAO_VERSAO')
END
